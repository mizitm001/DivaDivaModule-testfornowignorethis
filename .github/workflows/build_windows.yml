name: Build Windows Executable

on:
  push:
    branches:
      - main # Or your main branch name, e.g., master
  pull_request:
    branches:
      - main # Or your main branch name

jobs:
  build-windows:
    runs-on: windows-latest # Use a Windows runner for Windows compilation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # This action checks out your repository code

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Specify your Python version, e.g., '3.10' or '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Pillow pyinstaller

      - name: Compile with PyInstaller
        # This assumes your divadivamodule.spec file is in the root of your repository
        run: pyinstaller divadivamodule.spec

      - name: List contents of dist directory
        # This step will show you exactly what's inside the 'dist' folder
        # Look for the output here to confirm the exact path of your executable or folder
        run: dir dist /s # For Windows runners, /s lists subdirectories too

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: divadivamodule-windows-exe
          # IMPORTANT: Adjust 'path:' based on the output of the 'List contents' step
          # If PyInstaller creates a 'divadivamodule' folder inside 'dist', use the path below:
          path: dist/divadivamodule/
          # If it somehow creates just the .exe directly in 'dist', use this instead (less common for apps with data):
          # path: dist/divadivamodule.exe
